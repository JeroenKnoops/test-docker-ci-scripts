name: test
on: 
  push:
    branches:
      - main
      - add-tern
      - add-k8s-sigs-bom

jobs:
  build:
    name: Build docker image 
    runs-on: ubuntu-20.04
    outputs:
      container-digest: ${{ steps.docker.outputs.container-digest }}
      container-tags: ${{ steps.docker.outputs.container-tags }}
      container-repo: jeroenknoops/test-image
      push-indicator: ${{ steps.docker.outputs.push-indicator }}

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: philips-software/docker-ci-scripts@main
      id: docker
      with:
        dockerfile: 1
        image-name: test-image 
        tags: 'latest 1 1.2 1.2.1'
        push-branches: 'main add-tern add-k8s-sigs-bom'
      env:
        DOCKER_USERNAME: jeroenknoops 
        DOCKER_PASSWORD: '${{ secrets.DOCKER_PASSWORD }}'
        DOCKER_ORGANIZATION: jeroenknoops

    - name: Output digest
      run: |
        echo "container-digest: ${{ steps.docker.outputs.container-digest }}"
        echo "container-tags: ${{ steps.docker.outputs.container-tags }}"
        echo "push-indicator: ${{ steps.docker.outputs.push-indicator }}"

  sbom:
    name: software-bill-of-material
    needs: [build]
    if: needs.build.outputs.push-indicator == 'true'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: philips-labs/tern-action@v1.3.0
        id: scan
        with:
          image: jeroenknoops/test-image:latest
          format: spdxjson
          output: jeroenknoops-test-image.json

      - name: Debug SBOM 
        run: |
          cat jeroenknoops-test-image.json

      - name: Upload sbom 
        uses: actions/upload-artifact@v2
        with:
          name: sbom 
          path: jeroenknoops-test-image.json
          retention-days: 5

  bom:
    name: software-bill-of-material-k8s-sigs
    needs: [build]
    if: needs.build.outputs.push-indicator == 'true'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17.2' 
      - name: Install bom
        run: |
          go install sigs.k8s.io/bom/cmd/bom@latest
          bom generate -n jeroenknoops-test-image --image jeroenknoops/test-image:latest -a > jeroenknoops-test-image-k8s-bom.txt
      - name: Debug SBOM 
        run: |
          cat jeroenknoops-test-image-k8s-bom.txt
      - name: Upload sbom 
        uses: actions/upload-artifact@v2
        with:
          name: bom-k8s-sigs
          path: jeroenknoops-test-image-k8s-bom.txt
          retention-days: 5

      - uses: philips-labs/tern-action@v1.3.0
        id: scan
        with:
          image: jeroenknoops/test-image:latest
          format: spdxtagvalue
          output: jeroenknoops-test-image.txt

      - name: Debug SBOM 
        run: |
          cat jeroenknoops-test-image.txt

      - name: Upload sbom 
        uses: actions/upload-artifact@v2
        with:
          name: bom-tern
          path: jeroenknoops-test-image.txt
          retention-days: 5

  container-provenance:
    name: container-provenance
    needs: [build]
    if: needs.build.outputs.push-indicator == 'true'
    runs-on: ubuntu-20.04

    steps:
      - name: Generate provenance
        uses: philips-labs/slsa-provenance-action@v0.5.0
        with:
          command: generate
          subcommand: container
          arguments: --repository ${{ needs.build.outputs.container-repo }} --digest ${{ needs.build.outputs.container-digest }} --tags ${{ needs.build.outputs.container-tags }}

        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Debug provenance
        run: |
          cat provenance.json

      - name: Upload provenance 
        uses: actions/upload-artifact@v2
        with:
          name: provenance 
          path: provenance.json 
          retention-days: 5

  attach-provenance-and-sbom:
    name: attach provenance and SBOM
    needs: [build, container-provenance, sbom]
    if: needs.build.outputs.push-indicator == 'true'
    runs-on: ubuntu-20.04

    steps:
      - name: Download files to attach
        uses: actions/download-artifact@v2
        with:
          name: sbom 

      - name: Debug SBOM 
        run: |
          cat jeroenknoops-test-image.json

      - name: Download files to attach
        uses: actions/download-artifact@v2
        with:
          name: provenance 

      - name: Debug provenance
        run: |
          cat provenance.json

      - name: Install cosign
        uses: sigstore/cosign-installer@v1.4.1
        with:
          cosign-release: 'v1.4.1'

      - name: Login to Container registries
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u jeroenknoops --password-stdin

      - name: Only predicate part
        run: |
          cat provenance.json | jq .predicate > provenance-predicate.json

      - name: Attach provenance to image
        run: |
          echo '${{ secrets.COSIGN_PRIVATE_KEY }}' > cosign.key
          cosign attest --predicate provenance-predicate.json --type slsaprovenance --key cosign.key ${{ needs.build.outputs.container-repo }}@${{ needs.build.outputs.container-digest }}
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Attach sbom to image
        run: |
          cosign attest --predicate jeroenknoops-test-image.json --type spdx --key cosign.key  ${{ needs.build.outputs.container-repo }}@${{ needs.build.outputs.container-digest }}
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Verify attestation
        run: |
          echo '${{ secrets.COSIGN_PUBLIC_KEY }}' > cosign.pub
          cosign verify-attestation --key cosign.pub ${{ needs.build.outputs.container-repo }}@${{ needs.build.outputs.container-digest }}

      - name: Logout from Container registries
        if: ${{ always() }}
        run: |
          docker logout
